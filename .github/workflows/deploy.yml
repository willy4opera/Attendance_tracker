name: Simplified Production Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Select deployment type'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - frontend_only
          - backend_only

env:
  DEPLOY_PATH: /var/www/html/Attendance_tracker

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 77.37.121.27 >> ~/.ssh/known_hosts

      - name: Deploy Code and Services
        run: |
          echo "🚀 Starting deployment to production..."
          ssh root@77.37.121.27 << 'ENDSSH'
            set -e
            cd ${{ env.DEPLOY_PATH }}
            
            echo "📥 Pulling latest code..."
            git stash push -m 'Auto-stash before deployment' || true
            git fetch origin main
            git pull origin main
            
            echo "✅ Code updated successfully"
            
            echo "🐳 Starting Docker services..."
            
            # Handle deployment type
            DEPLOY_TYPE="${{ github.event.inputs.deployment_type || 'full' }}"
            
            case $DEPLOY_TYPE in
              "backend_only")
                echo "📦 Building and deploying backend only..."
                docker-compose -f docker-compose.prod.yml build backend
                docker-compose -f docker-compose.prod.yml up -d backend
                ;;
              "frontend_only")
                echo "📦 Building and deploying frontend only..."
                docker-compose -f docker-compose.prod.yml build frontend
                docker-compose -f docker-compose.prod.yml up -d frontend
                ;;
              *)
                echo "📦 Building and deploying all services..."
                docker-compose -f docker-compose.prod.yml build
                docker-compose -f docker-compose.prod.yml up -d
                ;;
            esac
            
            echo "⏳ Waiting for services to be healthy..."
            sleep 10
            
            echo "🔍 Checking service status..."
            docker-compose -f docker-compose.prod.yml ps
            
            echo "✅ Deployment completed successfully!"
          ENDSSH

      - name: Health Check
        run: |
          echo "🏥 Running health checks..."
          ssh root@77.37.121.27 << 'ENDSSH'
            cd ${{ env.DEPLOY_PATH }}
            
            echo "🔍 Docker container status:"
            docker-compose -f docker-compose.prod.yml ps
            
            echo ""
            echo "📊 Service health checks:"
            
            # Check backend
            if curl -f -s localhost:5001/api/v1/health > /dev/null; then
              echo "✅ Backend is healthy"
            else
              echo "❌ Backend health check failed"
              exit 1
            fi
            
            # Check frontend
            if curl -f -s http://localhost:5173 > /dev/null; then
              echo "✅ Frontend is healthy"
            else
              echo "❌ Frontend health check failed"
              exit 1
            fi
            
            echo ""
            echo "📋 Recent logs:"
            docker-compose -f docker-compose.prod.yml logs --tail=20
          ENDSSH

      - name: Notify Deployment Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
