// Task types
export interface Task {
  id: string
  title: string
  description?: string
  position: number
  listId: string
  boardId: string
  list?: {
    id: string
    name: string
    boardId: string
  }
  board?: {
    id: string
    name: string
    projectId: string
  }
  assignees?: TaskAssignee[]
  labels?: TaskLabel[]
  attachments?: TaskAttachment[]
  comments?: TaskComment[]
  checklist?: TaskChecklistItem[]
  dueDate?: string
  startDate?: string
  estimatedHours?: number
  actualHours?: number
  priority: TaskPriority
  status: TaskStatus
  isCompleted: boolean
  isArchived: boolean
  creator?: User
  creatorId?: string
  metadata?: {
    customFields?: Record<string, unknown>
    createdBy?: string
    createdAt?: string
    lastModifiedBy?: string
    lastModifiedAt?: string
  }
  createdAt: string
  updatedAt: string
}

export interface TaskAssignee {
  id: string
  taskId: string
  userId: string
  user: {
    id: string
    firstName: string
    lastName: string
    email: string
    profilePicture?: string
  }
  assignedAt: string
}

export interface TaskLabel {
  id: string
  name: string
  color: string
  boardId: string
  createdAt: string
  updatedAt: string
}

export interface TaskAttachment {
  id: string
  taskId: string
  filename: string
  originalName: string
  mimeType: string
  size: number
  url: string
  uploadedBy?: User
  uploadedById?: string
  createdAt: string
}

export interface TaskComment {
  id: string
  taskId: string
  content: string
  author?: User
  authorId?: string
  parentId?: string
  replies?: TaskComment[]
  mentions?: string[]
  isEdited: boolean
  createdAt: string
  updatedAt: string
}

export interface TaskChecklistItem {
  id: string
  taskId: string
  text: string
  isCompleted: boolean
  position: number
  createdAt: string
  updatedAt: string
}

export interface TaskStats {
  totalComments: number
  totalAttachments: number
  totalChecklistItems: number
  completedChecklistItems: number
  totalAssignees: number
  totalLabels: number
  hoursSpent: number
  estimatedHours: number
  daysUntilDue?: number
  isOverdue: boolean
}

export interface TaskWithStats extends Task {
  stats?: TaskStats
}

export interface TasksResponse {
  tasks: Task[]
  total: number
  page: number
  totalPages: number
}

export interface CreateTaskDto {
  title: string
  description?: string
  listId: string
  position: number
  assigneeIds?: string[]
  labelIds?: string[]
  dueDate?: string
  startDate?: string
  estimatedHours?: number
  priority: TaskPriority
  metadata?: Record<string, unknown>
}

export interface UpdateTaskDto extends Partial<CreateTaskDto> {
  isCompleted?: boolean
  isArchived?: boolean
  actualHours?: number
}

export interface MoveTaskDto {
  taskId: string
  targetListId: string
  position: number
}

export interface CreateTaskCommentDto {
  content: string
  parentId?: string
  mentions?: string[]
}

export interface UpdateTaskCommentDto {
  content: string
  mentions?: string[]
}

export interface CreateTaskChecklistItemDto {
  text: string
  position: number
}

export interface UpdateTaskChecklistItemDto {
  text?: string
  isCompleted?: boolean
  position?: number
}

export enum TaskPriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high',
  URGENT = 'urgent'
}

export enum TaskStatus {
  TODO = 'todo',
  IN_PROGRESS = 'in_progress',
  REVIEW = 'review',
  DONE = 'done'
}

// Import User type
interface User {
  id: string
  firstName: string
  lastName: string
  email: string
  profilePicture?: string
}
